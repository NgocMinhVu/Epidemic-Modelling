94^2 + (19 - 3) * 13 / 4
a <- 2
piover2 <- pi/2
3 * aladi
a^40
?exp
666 mod 17
666 %% 17
(657-exp(4.2))/(cos(3*pi)+log10(9538))
(pi/2) / piover4
piover4 <- pi/4
(pi/2) / piover4
666%%7
666%%17
663/17
17*39
(657-exp(4.2))/(cos(3*pi)+log10(9538))
abs(factorial(7)/cos(pi))
3.142*(1o^(-4))
3.142*(10^(-4))
a <- 26
b <- exp(sin(log10(a)))
round(b, digits = 4)
exp(sin(log10(a)))
exp (sin (log (a, base = 10)))
exp (sin (log (a, base = 10)))
?abs
?value
?log
load(url("https://github.com/paulnorthrop/stat0002/blob/master/days.Rdata?raw=true"))
days
?hist
?stem
quantile(days, 0.25)
47/4
(3/4)*1427 + (1/4)*1460
45/4
47/4
1427 + 1/4(1460-1427)
1427 + 1/4*(1460-1427)
3/4 * 47
quantile(days, 0.75)
quantile(days, 0.5)
2921 + 3/4*(2921-2921)
47/2
pi
exp (sin (log (a, base = 10)))
sin(pi)
sin(90)
sin(pi/2)
sin(90)
log10(26)
sin(log10(a))
a <- 2.6
exp (sin (log (a, base = 10)))
abs(factorial(7)/cos(pi))
3.142e-4
round(1.496555, 4)
47*0.25
47*0.5
0.75*47
?quantile
load(url("https://github.com/paulnorthrop/stat0002/blob/master/days.Rdata?raw=true"))
hist(days)
?hist
breakpoints1 <- c(0.500, 1500, 2500, 3500, 4500)
breakpoints1 <- c(0,500, 1500, 2500, 3500, 4500)
hist(days)
hist(days, breaks = breakpoints1, freq = FALSE, ylab = "density", xlab = "mystery variable (days)")
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density", ylim = c(0, 1))
hist(days, breaks = breakpoints1, freq = FALSE, ylab = "density", xlab = "mystery variable (days)")
hist(days)
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density"
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density")
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density")
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density", xlim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density", ylim = c(0, 0.05))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4422), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 4500), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints1, freq = FALSE, main = "", xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.0006))
breakpoints2 <- c(0, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500)
hist(days, breaks = breakpoints2, freq = FALSE, main = "", xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.0006))
hist(days, breaks = breakpoints2, freq = FALSE, main = "", xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.0007))
hist(days, breaks = breakpoints2, freq = FALSE, main = "", xlab = "mystery variable (days)", xlim = c(0, 5000), ylab = "density", ylim = c(0, 0.001))
?stem
stem(islands)
stem(days)
?floor
roundedDays <- round(c, digits = -2)
roundedDays <- round(days, digits = -2)
stem(roundedDays)
stem(roundedDays, scale = 5)
stem(roundedDays, scale = 1)
stem(roundedDays, scale = 0.5)
365.25*4
365.25*4*2
days[23]
days[24]
rm
rm(list = ls())
first_135_not_1 <- seq(from = 2, to = 135, by = 1)
first_135_not_1**2
first_134 = seq(from = 1, to = 134, by = 1)
first_134[-134]
first_134[4:6]
entries <- ruinf(100000)
entries <- runif(100000)
summary(entries)
?hist
?runif
data []
data()
help("rivers")
my hand <-  ("spades", "hearts", "hearts", "spades", "diamonds", "diamonds",
my hand <- c("spades", "hearts", "hearts", "spades", "diamonds", "diamonds",
my_hand <- c("spades", "hearts", "hearts", "spades", "diamonds", "diamonds",
"hearts", "clubs", "spades", "spades","diamonds", "hearts", "clubs")
table(my_hand)
?table
Neo <- matrix (data = seq (from = 1, to = 9, by = 1), nrow = 3)
Neo
?View
View(Neo)
tom <- Neo[, 3]
Session, Save Workspace As Buh
sessionInfo()
?t
?solve
square <- Neo %^% 2
mat <- matrix(1:9, nrow=3)mat %^% 2
mat <- matrix(1:9, nrow=3)
mat %^% 2
?%*%
mat %*% 2
square <- Neo %*% 2
square <- Neo%^%2
View(Neo)
View(mat)
mat%^%2
install.packages("expm")
mat%^%2
mat%^%2
library(expm)
square <- Neo%^%2
Neo%^%2[1, 3]
Neo[1, 3]
(Neo%^%2)[1, 3]
View(square)
(Neo%^%2)[1, 3]
?solve
Burr <- array (data = seq (from = 1, to = 24, by = 1), dim  = c (2, 3, 4))
Burr
Burr[2, 2, 3]
Burr[, 2:3, 3]
Burr[, 2:3, 3:4]
Burr[1, 2:3, 3:4]
?t
t(Burr[1, 2:3, 3:4])
help("HairEyeColor")
data("HairEyeColor")
force(HairEyeColor)
array(HairEyeColor)
a <- as.integer(2)
class a
class(a)
b <- a*2
class(b)
b <- as.integer(b)
class(b)
?sample
sample(array(mat), 4)
sample(mat, 4)
first_134[first_134%%3 == 0]
dick <- diag (Neo)
Neo[Neo[2,] > dick[2], 2]
Neo[2,]
Neo[2,] > dick[2]
first_133 <- first_134[-134]
first_133
three_digit_integers_up_to_134 <- first_134[first_134 > 99]
three_digit_integers_up_to_134
first_20_sq <- first_134_sq[first_134 <= 20]
first_134_sq <- first_134 * first_134
first_20_sq <- first_134_sq[first_134 <= 20]
first_20_sq
Iamamatrix <- matrix (data = seq (from = 3, to = 26), nrow = 4)
View(Iamamatrix)
rm(list = ls())
rm(list=ls())
git init
source("~/Documents/UCL Data Science/STAT0004 /Week 1.R")
source("~/Documents/UCL Data Science/STAT0004 /Week 1.R")
plot(cumsum_rademacher,
type = 'l',
#ylim = c(-max(cumsum_rademacher), max(cumsum_rademacher)),
xlab = 'time',
ylab = 'displacement',
col = 'blue')
source("~/Documents/UCL Data Science/STAT0004 /Week 1.R")
plot(cumsum_rademacher,
type = 'l',
xlab = 'time',
ylab = 'displacement',
col = 'blue')
install.packages('tinytex')
tinytex::install_tinytex()
#+ include=FALSE
qanda <- read.csv('selective_affinities.csv',
colClasses = c(Hair = 'factor', Birth = 'factor'))
setwd("/Users/m250/Documents/Projects/Epidemic Modelling")
installed.packages('deSolve')
rm(list=ls())
require(deSolve)
SEIR <- function(time, current_state, params){
with(as.list(c(current_state, params)),{
N <- S+E+I+R
dS <- -(beta*S*I)/N
dE <- (beta*S*I)/N - sigma*E
dI <- sigma*E - gamma*I - mu*I
dR <- gamma*I
dM <- mu*I
return(list(c(dS, dE, dI, dR, dM)))
})
}
params <- c(beta=0.5, sigma=0.25, gamma=0.2, mu=0.001)
initial_state <- c(S=999999, E=1, I=0, R=0, M=0)
times <- 0:365
model <- ode(initial_state, times, SEIR, params)
View(SEIR)
model <- ode(initial_state, times, SEIR, params)
require(deSolve)
library(deSolve)
install.packages('deSolve')
require(deSolve)
SEIR <- function(time, current_state, params){
with(as.list(c(current_state, params)),{
N <- S+E+I+R
dS <- -(beta*S*I)/N
dE <- (beta*S*I)/N - sigma*E
dI <- sigma*E - gamma*I - mu*I
dR <- gamma*I
dM <- mu*I
return(list(c(dS, dE, dI, dR, dM)))
})
}
params <- c(beta=0.5, sigma=0.25, gamma=0.2, mu=0.001)
initial_state <- c(S=999999, E=1, I=0, R=0, M=0)
times <- 0:365
model <- ode(initial_state, times, SEIR, params)
View(model)
summary(model)
# Plot
matplot(model, type="l", lty=1, main="SEIR model", xlab="Time")
legend <- colnames(model)[2:6]
legend("right", legend=legend, col=2:6, lty = 1)
p <- ggplot(model, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
grom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
# Plot using ggplot2
require(ggplot2)
p <- ggplot(model, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
grom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
type(model)
typeof(model)
typeof(model)
model_df <- as.data.frame(model)
View(model_df)
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
grom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
View(p)
p
library(wesanderson)
library('wesanderson')
library('ggsci')
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M)) +
scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
theme.set(
theme_minimal() +
theme(legend.position='right')
)
theme_set(
theme_minimal() +
theme(legend.position='right')
)
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M)) +
scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S), col='#52854C') +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M)) #+
#scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352', 'blue'))
p
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S), color=y) +
geom_line(aes(y=E), color=y) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S, color=y)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352', 'blue'))
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S, color=time)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352', 'blue'))
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S, color=1)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352', 'blue'))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R M)))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M)))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352', 'blue'))
p
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M)))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M), color=y))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M), color=c(S, E, I, R, M)))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M), color=c('S', 'E', 'I', 'R', 'M')))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=c(S, E, I, R, M), color=colnames(model)[2:6]))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=model[,2:6], color=colnames(model)[2:6]))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, y=model[2:6], color=colnames(model)[2:6]))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, color=colnames(model)[2:6])) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p <- ggplot(model_df, aes(x=time, color=colnames(model)[2:6])) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
#p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
p <- ggplot(model_df, aes(x=time)) +
geom_line(aes(y=S)) +
geom_line(aes(y=E)) +
geom_line(aes(y=I)) +
geom_line(aes(y=R)) +
geom_line(aes(y=M))
#p + scale_color_manual(values = c( '#52854C', '#FFDB6D', '#D16103', '#4E84C4', '#293352'))
p
library(tidyr)
install.packages('tidyr')
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
install.packages('tidyr')
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
library(tidyr)
